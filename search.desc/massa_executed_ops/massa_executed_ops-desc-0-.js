searchState.loadedDescShard("massa_executed_ops", 0, "Copyright (c) 2022 MASSA LABS info@massa.net\nA structure to list and prune previously executed …\nSpeculative changes for ExecutedOps\nDeserializer for <code>ExecutedOps</code>\n<code>ExecutedOps</code> Serializer\nA structure to list and prune previously executed …\nChanges for ExecutedOps (was_successful, op_expiry_slot)\nDeserializer for <code>ExecutedOps</code>\n<code>ExecutedOps</code> Serializer\nCopyright (c) 2022 MASSA LABS info@massa.net\nExecuted denunciations configuration\nExecuted operations configuration\nAccess to the RocksDB database\nRocksDB Instance\nPeriod delta for denunciation to expire\nfor rocksdb deserialization\nDenunciation index key formatting macro\nDenunciation index key formatting macro\nfor rocksdb serialization\nCopyright (c) 2023 MASSA LABS info@massa.net\nNumber of endorsements\nCopyright (c) 2023 MASSA LABS info@massa.net This file …\nCopyright (c) 2022 MASSA LABS info@massa.net This file …\nNumber of extra periods to keep executed denunciations\nNumber of extra periods to keep executed denunciations\nexecution status of operations (true: success, false: fail)\nOp id key formatting macro\nOp id key formatting macro\nCopyright (c) 2022 MASSA LABS info@massa.net\nfor better pruning complexity\nExecuted operations btreemap with slot as index for better …\nNumber of threads\nNumber of threads\nPeriod delta for denunciation to expire\nNumber of endorsements\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNumber of extra periods to keep executed denunciations\nNumber of extra periods to keep executed denunciations\nNumber of threads\nNumber of threads\nSpeculative changes for ExecutedOps\nDeserializer for <code>ExecutedOps</code>\n<code>ExecutedOps</code> Serializer\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>ExecutedDenunciations</code> Serializer\nCreate a new deserializer for <code>ExecutedOps</code>\nA structure to list and prune previously executed …\nApply speculative operations changes to the final executed …\nExecuted denunciations configuration\nCheck if a denunciation (e.g. a denunciation index) was …\nAccess to the RocksDB database\nRemove a denunciation_index from the DB\nfor rocksdb deserialization\nfor rocksdb serialization\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDeserializes the key and value, useful after bootstrap\nCreate a new <code>ExecutedDenunciations</code>\nPrune all denunciations that have expired, assuming the …\nAdd a denunciation_index to the DB\nRecomputes the local caches after bootstrap or loading the …\nReset the executed denunciations\nfor better pruning complexity\nA structure to list and prune previously executed …\nApply speculative operations changes to the final executed …\nExecuted operations configuration\nCheck if an operation was executed\nRocksDB Instance\nRemove a op_id from the DB\nReturns the argument unchanged.\nGet the execution statuses of a set of operations. Returns …\nCalls <code>U::from(self)</code>.\nDeserializes the key and value, useful after bootstrap\nCreates a new <code>ExecutedOps</code>\nexecution status of operations (true: success, false: fail)\nPrune all expired operations\nAdd an executed_op to the DB\nRecomputes the local caches after bootstrap or loading the …\nReset the executed operations\nExecuted operations btreemap with slot as index for better …\nChanges for ExecutedOps (was_successful, op_expiry_slot)\nDeserializer for <code>ExecutedOps</code>\n<code>ExecutedOps</code> Serializer\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>ExecutedOps</code> Serializer\nCreate a new deserializer for <code>ExecutedOps</code>")