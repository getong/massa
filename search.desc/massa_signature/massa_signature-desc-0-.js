searchState.loadedDescShard("massa_signature", 0, "Signature management\ninvalid version identifier: {0}\nversioned KeyPair used for signature and decryption\nError generated by massa-signature crate\nParsing error: {0}\nPublic key used to check if a message was encoded by the …\nDeserializer for <code>PublicKey</code>\nPublic key used to check if a message was encoded by the …\nSignature generated from a message and a <code>KeyPair</code>.\nSerializer for <code>Signature</code>\nSignature error : {0}\nWrong prefix for hash: expected {0}, got {1}\nVerifies a batch of signatures\ninvalid version identifier: {0}\nError generated by massa-signature crate\nParsing error: {0}\nSignature error : {0}\nWrong prefix for hash: expected {0}, got {1}\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nversioned KeyPair used for signature and decryption\nversioned KeyPair used for signature and decryption\nSize of a public key\nPublic key used to check if a message was encoded by the …\nDeserializer for <code>PublicKey</code>\nPublic key used to check if a message was encoded by the …\nSize of a signature\nSignature generated from a message and a <code>KeyPair</code>.\nSerializer for <code>Signature</code>\nSignature generated from a message and a <code>KeyPair</code>.\n<code>::serde::Deserialize</code> trait for <code>KeyPair</code> if the deserializer …\n<code>::serde::Deserialize</code> trait for <code>PublicKey</code> if the …\n<code>::serde::Deserialize</code> trait for <code>Signature</code> if the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDeserialize a <code>Signature</code> using <code>bs58</code> encoding with checksum.\nDeserialize a <code>Signature</code> using <code>bs58</code> encoding with checksum.\nConvert a byte slice to a <code>KeyPair</code>\nConvert a byte array of size <code>SECRET_KEY_BYTES_SIZE</code> to a …\nDeserialize a <code>PublicKey</code> from bytes.\nDeserialize a <code>PublicKey</code> from bytes.\nDeserialize a Signature from bytes.\nDeserialize a Signature from bytes.\nExample\nExample\nExample\nGenerates a new KeyPair of the version given as parameter. …\nGenerate a new <code>KeyPair</code>\nGet the public key of the keypair\nGet the public key of the keypair\nReturn the total length after serialization\nReturn the total length after serialization\nReturn the total length after serialization\nReturn the total length after serialization\nReturn the total length after serialization\nReturn the total length after serialization\nGet the version of the given KeyPair\nReturn the current version keypair\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a <code>PublicKeyDeserializer</code>\nCreates a <code>SignatureDeserializer</code>\n<code>::serde::Serialize</code> trait for <code>KeyPair</code> if the serializer is …\n<code>::serde::Serialize</code> trait for <code>PublicKey</code> if the serializer …\n<code>::serde::Serialize</code> trait for <code>Signature</code> if the serializer …\nReturns the Signature produced by signing data bytes with …\nReturns the Signature produced by signing data bytes with …\nSerialize a <code>Signature</code> using <code>bs58</code> encoding with checksum.\nSerialize a <code>Signature</code> using <code>bs58</code> encoding with checksum.\nReturn the bytes (as a Vec) representing the keypair\nReturn the bytes representing the keypair (should be a …\nSerialize a <code>PublicKey</code> as bytes.\nReturn the bytes representing the keypair (should be a …\nSerialize a Signature into bytes.\nSerialize a Signature into bytes.\nChecks if the <code>Signature</code> associated with data bytes was …\nChecks if the <code>Signature</code> associated with data bytes was …\nVerifies a batch of signatures")