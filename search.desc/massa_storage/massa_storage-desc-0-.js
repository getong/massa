searchState.loadedDescShard("massa_storage", 0, "Copyright (c) 2022 MASSA LABS info@massa.net\nA storage system for objects (blocks, operations…), …\nglobal block reference counter\nglobal block storage\nClaim block references. Returns the set of block refs that …\nClaim endorsement references. Returns the set of operation …\nClaim operation references. Returns the set of operation …\nClones the object to a new one that has no references\nCreates a new <code>Storage</code> instance. Must be called only one …\ncleanup on Storage instance drop\nDrop block references\nDrop local endorsement references. Ignores already-absent …\nDrop local operation references. Ignores already-absent …\nglobal endorsement reference counter\nglobal operation storage\nEfficiently extends the current Storage by consuming the …\nReturns the argument unchanged.\nget the block reference ownership\nget the endorsement reference ownership\nget the operation reference ownership\ninternal helper to locally claim a reference to an object\nCalls <code>U::from(self)</code>.\nlocally used block references\nlocally used endorsement references\nlocally used operation references\nglobal operation reference counter\nglobal operation storage\nGets a read reference to the blocks index\nGets a read reference to the endorsements index\nGets a read reference to the operations index\nEfficiently splits off a subset of the reference ownership …\nStore a block Note that this also claims a local reference …\nStore endorsements Claims local references to the added …\nStore operations Claims a local reference to the added …\nContainer for all blocks and different indexes. Note: The …\nAggregate block IDs by slot range. Arguments:\nBlocks structure container\nChecks whether a block exists in global storage.\nReturns the argument unchanged.\nGet a block reference by its ID Arguments:\nGet the block ids of the blocks containing a given …\nGet the block ids of the blocks containing a given …\nGet the block ids of the blocks at a given slot. Arguments:\nGet the block ids created by an address. Arguments:\nStructure mapping creators with the created blocks\nStructure mapping endorsement id with ids of blocks they …\nStructure mapping operation id with ids of blocks they are …\nStructure mapping slot with their block id\nInsert a block and populate the indexes. Arguments:\nCalls <code>U::from(self)</code>.\nRemove a block, remove from the indexes and do some …\nContainer for all endorsements and different indexes. …\nChecks whether an endorsement exists in global storage.\nEndorsements structure container\nReturns the argument unchanged.\nGets a reference to a stored endorsement, if any.\nGet endorsements created by an address Arguments:\nStructure mapping creators with the created endorsements\nInsert an endorsement and populate the indexes. Arguments:\nCalls <code>U::from(self)</code>.\nRemove a endorsement, remove from the indexes and made …\nContainer for all operations and different indexes. Note: …\nChecks whether an operation exists in global storage.\nReturns the argument unchanged.\nGets a reference to a stored operation, if any.\nGet operations by prefix Arguments:\nGet operations created by an address Arguments:\nStructure mapping creators with the created operations\nStructure indexing operations by ID prefix\nInsert an operation and populate the indexes. Arguments:\nCalls <code>U::from(self)</code>.\nOperations structure container\nRemove a operation, remove from the indexes and made some …")