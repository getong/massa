searchState.loadedDescShard("massa_pos_worker", 0, "Enumeration of internal commands sent to the selector …\nDraws for a cycle, used in selector cache\nDraw cache (lowest index = oldest)\nStructure of the shared pointer to the computed draws, or …\nInput requirements for the draw\nStop the thread (usually sent by the manager and pushed at …\nThis module implements a selector controller. See …\ncycle number\ncache of draws\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nget a reference to the draws of a given cycle\nGet the range of available cycles in the cache. Returns …\nget the index of a cycle in the cache\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStart thread selector Launches a selector worker thread …\nimplementation of the selector controller\nImplementation of the Selector manager Allows stopping the …\nCache storing the computed selections for each cycle.\nReturns a boxed clone of self. Allows cloning …\nFeed cycle to the selector\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet selections computed for a slot range (only lists …\nGet Address of the selected block producer for a given slot\nGet Selection computed for a slot:\nInput data mpsc (used to stop the selector thread)\nMPSC to send commands to the selector thread\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ntodo: use a configuration structure\nstops the worker\nthread count\nhandle used to join the worker thread\nWaits for draws to reach at least a given cycle number. …\nDraws block and creators for a given cycle. Then prune the …\nStructure gathering all elements needed by the selector …\nCache of computed endorsements\nConfiguration\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nprocess the result of a draw\nThread loop.\nCreates the <code>SelectorThread</code> structure to gather all data …\nLaunches a selector worker thread and returns a pair to …")